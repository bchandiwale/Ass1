
name: "CD pipeline for App Runner"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 123456789012
  ECR_REPOSITORY: my-repository
  DEV_SERVICE: my-service-dev
  STAGE_SERVICE: my-service-stage
  PROD_SERVICE: my-service-prod

jobs:
  DeployDev:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      run: |
        # Build the Docker image
        docker build -t ${{ env.ECR_REPOSITORY }} .

        # Tag the Docker image
        docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

        # Push the Docker image to ECR
        docker push ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
    - name: Deploy to App Runner
      uses: aws-actions/deploy-to-app-runner@v1
      with:
        image-url: ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        service-name: ${{ env.DEV_SERVICE }}
        access-role-arn: ${{ secrets.AWS_IAM_ROLE_ARN }}
        region: ${{ env.AWS_REGION }}
        cpu: 256
        memory: 512
        port: 8080
        wait-for-service-stability: true
    - name: App Runner output
      run: echo "App Runner deployment complete!"

  DeployPreProd:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      run: |
        # Build the Docker image
        docker build -t ${{ env.ECR_REPOSITORY }} .

        # Tag the Docker image
        docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

        # Push the Docker image to ECR
        docker push ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
    - name: Deploy to App Runner
      uses: aws-actions/deploy-to-app-runner@v1
      with:
        image-url: ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        service-name: ${{ env.STAGE_SERVICE }}
        access-role-arn: ${{ secrets.AWS_IAM_ROLE_ARN }}
        region: