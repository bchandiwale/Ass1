
name: Continuous Deployment to AWS App Runner

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  DeployDev:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-and-push
      run: |
        # Build the Docker image
        docker build -t $ECR_REPOSITORY .

        # Tag the Docker image
        docker tag $ECR_REPOSITORY:latest $ECR_REPOSITORY:$IMAGE_TAG

        # Push the Docker image to Amazon ECR
        docker push $ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to App Runner
      uses: aws-actions/app-runner-deploy@v1
      with:
        image-url: ${{ steps.build-and-push.outputs.image-url }}
        service-name: app-runner-service-dev
        access-role-arn: ${{ secrets.AWS_ACCOUNT_ID }}
        region: ${{ secrets.AWS_REGION }}
        cpu: 512
        memory: 1024
        port: 8080
        wait-for-service-stability: true

    - name: App Runner output
      run: echo "Deployment to App Runner complete!"
  DeployPreProd:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-and-push
      run: |
        # Build the Docker image
        docker build -t $ECR_REPOSITORY .

        # Tag the Docker image
        docker tag $ECR_REPOSITORY:latest $ECR_REPOSITORY:$IMAGE_TAG

        # Push the Docker image to Amazon ECR
        docker push $ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to App Runner
      uses: aws-actions/app-runner-deploy@v1
      with:
        image-url: ${{ steps.build-and-push.outputs.image-url }}
        service-name: app-runner-service-preprod
        access-role-arn: ${{ secrets.AWS_ACCOUNT_ID }}
        region: ${{ secrets.AWS_REGION }}
        cpu: 512
        memory: 1024
        port: 8080
        wait-for-service-stability: true

    - name: App Runner output
      run: echo "Deployment to App Runner complete!"
  DeployProd:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@